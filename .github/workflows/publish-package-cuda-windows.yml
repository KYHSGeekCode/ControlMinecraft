# https://github.com/pybind/scikit_build_example/blob/master/.github/workflows/wheels.yml
name: Wheels

on: [workflow_call]

env:
  FORCE_COLOR: 3

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-cuda-windows
  cancel-in-progress: true

jobs:
  build_wheels:
    name: Wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]

    steps:
    - name: Install miniconda
      uses: conda-incubator/setup-miniconda@v3
      with:
        activate-environment: foo
        python-version: 3.9
        channels: conda-forge,spyder-ide
        allow-softlinks: true
        channel-priority: flexible
        show-channel-urls: true
        use-only-tar-bz2: true
    - run: |
        conda info
        conda list
        conda config --show-sources
        conda config --show

    - name: Install cuda using conda
      run: conda install cuda -c nvidia
    
    - name: Check cuda version
      run: |
        nvcc --version
        conda info --envs
        $activeEnv = (conda info --envs | Select-String '\*' | ForEach-Object { ($_ -replace '\*', '').Trim() })
        $env:CUDA_HOME = "$activeEnv\Library"
        $env:PATH = "$env:CUDA_HOME\bin;$env:PATH"
        $env:CMAKE_PREFIX_PATH = "$activeEnv"
        Write-Host "CUDA_HOME set to $env:CUDA_HOME"
        Write-Host "PATH updated with $env:CUDA_HOME\bin"
        Write-Host "CMAKE_PREFIX_PATH set to $env:CMAKE_PREFIX_PATH"
        [System.Environment]::SetEnvironmentVariable('CUDA_HOME', $env:CUDA_HOME, 'User')
        [System.Environment]::SetEnvironmentVariable('PATH', $env:PATH, 'User')
        [System.Environment]::SetEnvironmentVariable('CMAKE_PREFIX_PATH', $env:CMAKE_PREFIX_PATH, 'User')
    
    - uses: actions/checkout@v4
      with:
        submodules: true

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '21'

    - uses: astral-sh/setup-uv@v4

    - name: Build wheels
      uses: pypa/cibuildwheel@v2.22.0
      env:
        CIBW_SKIP: cp36-* cp37-* cp38-*
        CIBW_ENABLE: cpython-prerelease
        CIBW_ARCHS_WINDOWS: "AMD64 x86"
        CIBW_BEFORE_ALL: >
          choco install -y cuda-toolkit --version=12.6
          $env:CUDA_HOME = "C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.6"
          $env:PATH = "$env:CUDA_HOME\bin;$env:PATH"
          nvcc --version
          [System.Environment]::SetEnvironmentVariable('CUDA_HOME', $env:CUDA_HOME, 'User')
          [System.Environment]::SetEnvironmentVariable('PATH', $env:PATH, 'User')
          $env:LIB = "C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.6\lib\x64;$env:LIB"
          [System.Environment]::SetEnvironmentVariable('LIB', $env:LIB, 'User')



    - name: Verify clean directory
      run: git diff --exit-code
      shell: bash

    - uses: actions/upload-artifact@v4
      with:
        name: cibw-wheels-${{ matrix.os }}
        path: wheelhouse/*.whl